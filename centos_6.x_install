#!/usr/bin/env bash
set -o nounset -o pipefail -o errexit

#exec 3>&1 4>&2
#trap 'exec 2>&4 1>&3' 0 1 2 3
#exec 1>centos_6.x_install.log 2>&1
LOG=centos_6.x_install.log

echo "Starting yum installs..." >$LOG 2>&1

## Determine is system is an EC2 instance
if [ -f /sys/hypervisor/uuid ] && [ `head -c 3 /sys/hypervisor/uuid` == ec2 ];
then
        echo "Determined running in EC2"
        EC2=true
else
        echo "Determined NOT running in EC2"
fi

yum_update() {
        echo "Updating system, please be patient..."
        yum -y update >>$LOG 2>&1
}

yum_install_epel() {
        echo "Installing EPEL, please be patient..."
        yum -y install epel-release >>$LOG 2>&1
}

yum_install_tools() {
        echo "Installing tools, please be patient..."
        if [[ $EC2 ]];
        then
                yum -y install htop mutt rng-tools yum-cron xorg-x11-xauth yum-utils wireshark man >>$LOG 2>&1
        else
                yum -y install open-vm-tools htop mutt rng-tools yum-cron chrony xorg-x11-xauth yum-utils wireshark man >>$LOG 2>&1
        fi
}

yum_install_fish() {
        echo "Installing Fish Shell, please be patient..."
        yum-config-manager --add-repo http://fishshell.com/files/linux/RedHat_RHEL-6/fish.release:2.repo >>$LOG 2>&1
        yum -y install fish >>$LOG 2>&1
}

yum_install_extras() {
        echo "Installing extra libraries for Oracle setup, please be patient..."
        yum -y install libXrender-devel libXtst-devel >>$LOG 2>&1
}

disable_firewalls() {
        echo "Disabling firewalls..."
        service iptables stop
        service ip6tables stop
        chkconfig iptables off
        chkconfig ip6tables off
}

disable_ipv6() {
        echo "Disabling IPv6..."
        echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
        echo 1 > /proc/sys/net/ipv6/conf/default/disable_ipv6
        cat <<EOT >> /etc/sysctl.conf

## Disable IPv6
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
EOT
}

disable_selinux() {
        echo "Disabling SELINUX..."
        sed -i "s/SELINUX=enforcing/SELINUX=disabled/" /etc/selinux/config
}

rngd_setup() {
        echo "Setting up RNGD..."
        sed -i "s@EXTRAOPTIONS=\"\"@EXTRAOPTIONS=\"-r /dev/urandom\"@" /etc/sysconfig/rngd
        chkconfig rngd on
        service rngd start
}

chrony_setup() {
        echo "Setting up Chrony..."
        chkconfig chronyd on
        service chronyd start
}

yum_cron_setup() {
        echo "Setting up yum-cron..."
        if [[ -z $EC2 ]];
        then
                sed -i "s/CHECK_ONLY=no/CHECK_ONLY=yes/" /etc/sysconfig/yum-cron
                sed -i "s/CHECK_FIRST=no/CHECK_FIRST=yes/" /etc/sysconfig/yum-cron
                sed -i "s/DOWNLOAD_ONLY=no/DOWNLOAD_ONLY=yes/" /etc/sysconfig/yum-cron
        fi
        chkconfig yum-cron on
        service yum-cron start
}

update_sudoers() {
        echo "Updating sudoers to allow wheel group..."
        sed -i "s/^#\s*\(%wheel\s*ALL=(ALL)\s*ALL\)/\1/" /etc/sudoers
}

ec2_main() {
        yum_install_epel
        yum_install_tools
        yum_install_fish
        yum_install_extras
        yum_update
        yum_cron_setup
        disable_firewalls
        update_sudoers
}

non_ec2_main() {
        echo "I am not in EC2"
        disable_ipv6
        yum_install_epel
        yum_install_tools
        yum_install_fish
        yum_install_extras
        yum_update
        rngd_setup
        chrony_setup
        yum_cron_setup
        disable_firewalls
        disable_selinux
        update_sudoers
}

main() {
        echo "Starting Dev Box Conversion Script..."
        if [[ $EC2 ]];
        then 
                ec2_main
        else
                non_ec2_main
        fi
        echo "Dev Box Conversion Script Complete..."
        echo "Add user with the command \"useradd -m -G wheel -s /usr/bin/fish -d /home/foo foo\""
        echo ""
        echo "Please restart your system for the full changes to take effect!"
}

main
